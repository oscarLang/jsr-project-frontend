{"version":3,"sources":["compontents/Chart.tsx","utils/apiRequest.ts","reducers/profile.ts","contexts/profile.tsx","compontents/BuyDialog.tsx","compontents/SellDialog.tsx","utils/helpers.ts","compontents/StockRow.tsx","compontents/StockTable.tsx","views/Home.tsx","views/Register.tsx","views/StockDetail.tsx","compontents/Login.tsx","compontents/Calendar.tsx","compontents/Profile.tsx","compontents/RouteWithSideInformation.tsx","views/Deposit.tsx","views/Portfolio.tsx","views/LoginView.tsx","views/Logout.tsx","App.tsx","index.js"],"names":["Chart","object","React","useState","filter","setFilter","period","setFilterPeriod","timeForamt","setTimeFormat","useEffect","Object","keys","length","onChangeTimeRange","range","minutly","hourly","daily","CircularProgress","min","reduce","prev","curr","parseFloat","price","max","minDomain","Number","maxDomain","Typography","variant","name","ResponsiveContainer","width","aspect","AreaChart","data","reverse","margin","top","right","bottom","left","YAxis","domain","Math","round","Label","angle","position","XAxis","dataKey","tickFormatter","tick","format","Date","parse","Area","stroke","fill","type","dot","Tooltip","formatter","value","toFixed","labelFormatter","ToggleButtonGroup","color","exclusive","onChange","event","fullWidth","size","ToggleButton","apiRequest","url","method","a","axios","process","withCredentials","profileReducer","state","action","isLoggedIn","isLoggingIn","profile","funds","undefined","isFetchingUser","isFetchingFunds","initial","loginUser","email","password","getProfile","getFunds","logout","Function","ProfileContext","createContext","ProfileProvider","children","useReducer","dispatch","result","Provider","document","cookie","BuyDialog","stock","props","useContext","enqueueSnackbar","useSnackbar","helperText","setHelperText","error","setError","amountTextField","setAmount","existingAmount","setExistingAmount","stocks","hasTheStock","find","s","amount","handleBuy","ticker","Dialog","DialogTitle","id","DialogContent","DialogContentText","Grid","container","justifyContent","alignItems","item","TextField","autoFocus","label","target","DialogActions","Button","onClick","disabled","SellDialog","handleSell","getChangeOfStock","newPrice","old","slice","console","log","StockRow","row","alternativeLayout","setColor","updateStockValues","history","useHistory","showModal","useModal","socket","on","changePositive","setTimeout","removeAllListeners","changeOfStock","buyPrice","push","TableRow","TableCell","component","scope","style","align","StockTable","objects","TableContainer","Table","TableHead","TableBody","map","Home","setStocks","market","res","random","floor","spacing","xs","Paper","sx","padding","Register","passwordAgain","form","setForm","registerUser","preventDefault","to","maxWidth","Avatar","onSubmit","required","autoComplete","StockDetail","stockItem","setStockItem","stockPrice","setStockPrice","useParams","items","thisStock","change","sm","Card","CardContent","gutterBottom","catchPhrase","ceo","volatility","CardActions","Login","loginUserButtonPress","EarningsCalendar","earnings","setUpcoming","List","ListItem","ListItemText","primary","secondary","Divider","Profile","user","totalValue","setValue","development","setDevelopment","userReq","marketReq","stocksInMarket","combined","stockOfUser","t","v","forEach","isNaN","display","md","Link","RouteWithSideInformation","gap","flexGrow","DepositView","changeAmount","submit","minHeight","marginBottom","InputProps","startAdornment","InputAdornment","ButtonGroup","Portfolio","LoginView","LogoutView","io","reconnectionDelayMax","App","drawer","openDrawer","Box","CssBaseline","AppBar","Toolbar","IconButton","edge","AccountCircle","SwipeableDrawer","open","onClose","onOpen","role","button","ListItemIcon","marginTop","exact","path","ReactDOM","render","anchorOrigin","vertical","horizontal","maxSnack","beta","getElementById"],"mappings":"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","file":"static/js/main.607e58b4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, ButtonGroup, CircularProgress, ToggleButton, ToggleButtonGroup, Typography } from \"@mui/material\"\r\nimport { Area, AreaChart, CartesianGrid, Label, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\"\r\nimport { IStock, IStockHistory } from \"../utils/types\";\r\nimport { format } from 'date-fns'\r\n\r\ninterface IProps {\r\n  object: IStock;\r\n}\r\n\r\ntype FilterPeriod = \"HOUR\" | \"DAY\" | \"MONTH\";\r\n\r\nconst Chart: React.FC<IProps> = ({object}) => {\r\n    const [filter, setFilter] = React.useState<IStockHistory[]>([]);\r\n    const [period, setFilterPeriod] = React.useState<FilterPeriod>(\"HOUR\");\r\n    const [timeForamt, setTimeFormat] = React.useState<string>(\"HH:mm\");\r\n    React.useEffect(() => {\r\n        if (object && Object.keys(object).length) {\r\n            onChangeTimeRange(period);\r\n        }\r\n    }, [object]);\r\n\r\n    const onChangeTimeRange = (range: FilterPeriod): void => {\r\n        switch (range) {\r\n            case \"HOUR\":\r\n                setFilter(object.minutly);\r\n                setFilterPeriod(\"HOUR\");\r\n                setTimeFormat(\"HH:mm\");\r\n                break;\r\n            case \"DAY\":\r\n                setFilter(object.hourly);\r\n                setTimeFormat(\"HH:mm\");\r\n                setFilterPeriod(\"DAY\");\r\n                break;\r\n            case \"MONTH\":\r\n                setFilter(object.daily);\r\n                setTimeFormat(\"MM/dd\");\r\n                setFilterPeriod(\"MONTH\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const formatTick = (tick: string): string => {\r\n        return format(Date.parse(tick), timeForamt);\r\n    };\r\n\r\n    if (!object || !Object.keys(object).length || !filter.length) {\r\n        return <CircularProgress />\r\n    }\r\n\r\n    let min = filter.reduce((prev: IStockHistory, curr: IStockHistory): IStockHistory => {\r\n       return parseFloat(prev.price) < parseFloat(curr.price) ? prev : curr; \r\n    });\r\n    \r\n    let max = filter.reduce((prev: IStockHistory, curr: IStockHistory): IStockHistory => {\r\n        return parseFloat(prev.price) > parseFloat(curr.price) ? prev : curr; \r\n    });\r\n    let minDomain = Number(min.price) - 20 >= 0 ? Number(min.price) - 20 : 0;\r\n    let maxDomain = Number(max.price) + 20;\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\">{object.name}</Typography>\r\n            <ResponsiveContainer width=\"99%\" aspect={3}>\r\n                <AreaChart\r\n                    data={[...filter].reverse()}\r\n                    margin={{\r\n                        top: 24,\r\n                        right: 24,\r\n                        bottom: 0,\r\n                        left: 24,\r\n                    }}\r\n                >\r\n                    <YAxis domain={[Math.round(minDomain), Math.round(maxDomain)]}>\r\n                        <Label  \r\n                            angle={270}\r\n                            position=\"left\"\r\n                            >\r\n                            Price\r\n                        </Label>\r\n                    </YAxis>\r\n                    <XAxis dataKey=\"date\" tickFormatter={formatTick}/>\r\n                    <Area\r\n                        dataKey=\"price\"\r\n                        stroke=\"purple\"\r\n                        fill=\"lightblue\"\r\n                        type=\"monotone\"\r\n                        dot={false}\r\n                    />\r\n                    <Tooltip \r\n                        formatter={(value: string) => [`$${Number(value).toFixed(2)}`, \"Price\"]}\r\n                        labelFormatter={(value: string) => format(Date.parse(value),\"yyyy/MM/dd-HH:mm\")}\r\n                    />\r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n            <ToggleButtonGroup\r\n                color=\"primary\"\r\n                value={period}\r\n                exclusive\r\n                onChange={(event, value: FilterPeriod) => onChangeTimeRange(value)}\r\n                fullWidth\r\n                size=\"small\"\r\n                >\r\n                <ToggleButton value=\"HOUR\">Latest hour</ToggleButton>\r\n                <ToggleButton value=\"DAY\">Last 24 hours</ToggleButton>\r\n                <ToggleButton value=\"MONTH\">Last month</ToggleButton>\r\n            </ToggleButtonGroup>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Chart;","import axios, { Axios, Method } from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL || \"https://market.oscarlang.tech\";\r\n\r\nconst apiRequest = async (url: string, method: Method, data?: any): Promise<any> => {\r\n    return await axios({\r\n        method: method,\r\n        url: BASE_URL + url,\r\n        withCredentials: true,\r\n        data: data\r\n    });\r\n};\r\n\r\nexport default apiRequest;","import { IStock } from \"../utils/types\";\r\n\r\nexport interface IProfileUser {\r\n    email: string;\r\n    stocks?: IStock[];\r\n    funds: number;\r\n}\r\n\r\ntype Action =\r\n | { type: \"LOGIN_BEGIN\" }\r\n | { type: \"LOGIN_SUCCESS\", data: IProfileUser; }\r\n | { type: \"LOGIN_FAIL\" }\r\n | { type: \"FETCH_USER_BEGIN\" }\r\n | { type: \"FETCH_USER_SUCCESS\", data: IProfileUser }\r\n | { type: \"FETCH_USER_FAIL\" }\r\n | { type: \"FETCH_FUNDS\"}\r\n | { type: \"FETCH_FUNDS_ERROR\"}\r\n | { type: \"SET_FUNDS\", data: any}\r\n | { type: \"LOGOUT\"};\r\n\r\nexport interface ProfileState {\r\n    isLoggingIn: boolean;\r\n    isLoggedIn: boolean;\r\n    profile?: IProfileUser;\r\n    isFetchingFunds: boolean;\r\n    funds: number;\r\n    isFetchingUser: boolean;\r\n    loginUser: Function;\r\n    getProfile: Function;\r\n    getFunds: Function;\r\n    logout: Function;\r\n};\r\n\r\n\r\nconst profileReducer = (state: any, action: Action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_BEGIN':\r\n            return {...state, isLoggedIn: false, isLoggingIn: true};\r\n        case 'LOGIN_SUCCESS':\r\n            return {...state,\r\n                isLoggedIn: true,\r\n                isLoggingIn: false,\r\n                profile: action.data,\r\n                funds: action.data.funds || 0\r\n            };\r\n        case 'LOGIN_FAIL':\r\n            return {...state, isLoggedIn: false, isLoggingIn: false, profile: undefined};\r\n        case 'FETCH_USER_BEGIN':\r\n            return {...state, isFetchingUser: true};\r\n        case 'FETCH_USER_SUCCESS':\r\n            return {\r\n                ...state,\r\n                isFetchingUser: false,\r\n                isLoggedIn: true,\r\n                profile: action.data,\r\n                funds: action.data.funds || 0,\r\n            };\r\n        case 'FETCH_USER_FAIL':\r\n            return {...state, isFetchingUser: false, isLoggedIn: false};\r\n        case 'FETCH_FUNDS':\r\n            return {...state, isFetchingFunds: true};\r\n        case 'FETCH_FUNDS_ERROR':\r\n            return {...state, isFetchingFunds: false};\r\n        case 'SET_FUNDS':\r\n            return {...state, isFetchingFunds: false, funds: action.data.funds || 0 };\r\n        case 'LOGOUT':\r\n            return {...state, \r\n                isLoggingIn: false,\r\n                isLoggedIn: false,\r\n                profile: {} as IProfileUser,\r\n                isFetchingFunds: false,\r\n                funds: 0,\r\n                isFetchingUser: false};\r\n        default:\r\n            return state;\r\n    };\r\n};\r\nexport default profileReducer;","import profileReducer, { IProfileUser, ProfileState } from \"../reducers/profile\";\r\nimport React, { createContext, FC, useReducer } from 'react';\r\nimport apiRequest from \"../utils/apiRequest\";\r\n\r\nconst initial: ProfileState = {\r\n    isLoggingIn: false,\r\n    isLoggedIn: false,\r\n    profile: {} as IProfileUser,\r\n    isFetchingFunds: false,\r\n    funds: 0,\r\n    isFetchingUser: false,\r\n    loginUser: async (email: string, password: string) => false,\r\n    getProfile: async () => false,\r\n    getFunds: async () => 0,\r\n    logout: Function\r\n};\r\nexport const ProfileContext = React.createContext(initial);\r\n\r\n\r\nconst ProfileProvider: FC = ({ children }) => {\r\n    const [state, dispatch] = useReducer(profileReducer, initial);\r\n    \r\n    const loginUser = async (email: string, password: string): Promise<boolean> => {\r\n        try {\r\n            dispatch({ type: 'LOGIN_BEGIN'});\r\n            const result = await apiRequest(\"/user/login/\", \"POST\", {email: email, password: password});\r\n            dispatch({ type: 'LOGIN_SUCCESS', data: result.data});\r\n            return true;\r\n        } catch (error) {\r\n            dispatch({ type: 'LOGIN_FAIL'});\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const getProfile = async (): Promise<boolean> => {\r\n        try {\r\n            dispatch({ type: 'FETCH_USER_BEGIN'});\r\n            const result = await apiRequest(\"/user/profile/\", \"GET\");\r\n            dispatch({ type: 'FETCH_USER_SUCCESS', data: result.data});\r\n            return true;\r\n        } catch (error) {\r\n            dispatch({ type: 'FETCH_USER_FAIL'});\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const getFunds = async (): Promise<number> => {\r\n        try {\r\n            dispatch({ type: 'FETCH_FUNDS'});\r\n            const result = await apiRequest(\"/user/funds/\", \"GET\");\r\n            dispatch({ type: 'SET_FUNDS', data: result.data});\r\n            return result.data;\r\n        } catch (error) {\r\n            dispatch({ type: 'FETCH_FUNDS_ERROR'});\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    const logout = (): void => {\r\n        document.cookie = \"jwt=; Max-Age=-99999999;\"; \r\n        dispatch({ type: 'LOGOUT'});\r\n    };\r\n    \r\n    return (\r\n        <ProfileContext.Provider value={{\r\n            ...state,\r\n            getProfile,\r\n            loginUser,\r\n            getFunds,\r\n            logout\r\n        }}>\r\n            {children}\r\n        </ProfileContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ProfileProvider;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport apiRequest from \"../utils/apiRequest\";\r\nimport { IStock } from \"../utils/types\";\r\nimport { DialogTitle, DialogContent, DialogContentText, Grid, Typography, DialogActions, Button, TextField, Dialog, DialogProps } from \"@mui/material\";\r\nimport { ProfileContext } from \"../contexts/profile\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\ninterface IProps extends DialogProps {\r\n    stock: IStock;\r\n}\r\n\r\nconst BuyDialog: React.FC<IProps> = ({stock, ...props}) => {\r\n    const { profile, getProfile, funds } = useContext(ProfileContext);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [helperText, setHelperText] = React.useState(\"\");\r\n    const [error, setError] = React.useState(false);\r\n    const [amountTextField, setAmount] = React.useState(0);\r\n    const [existingAmount, setExistingAmount] = React.useState(0);\r\n    React.useEffect(() => {\r\n        if (profile && profile.stocks?.length) {\r\n            const hasTheStock = profile.stocks.find((s) => s.name === stock.name);\r\n            if (hasTheStock) {\r\n                setExistingAmount(hasTheStock.amount);\r\n            }\r\n        }\r\n    }, [profile]);\r\n\r\n    const handleBuy = async (): Promise<void> => {\r\n        if (error) {\r\n            setHelperText(\"Fix errors before buying stock: \" + helperText);\r\n            return;\r\n        }\r\n\r\n        const buyStock = await apiRequest(\"/market/buy/\", \"POST\",{\r\n            stock: stock.ticker,\r\n            amount: amountTextField\r\n        });\r\n\r\n        if (buyStock) {\r\n            enqueueSnackbar(amountTextField + \" stocks of \" + stock.name + \" bought\");\r\n            setError(false);\r\n            await getProfile();\r\n\r\n        } else {\r\n            setError(true);\r\n            setHelperText(\"Failed to purchase stocks\");\r\n        }\r\n    };\r\n    const  validate = (event: any): void => {\r\n        var amount = event.target.value;\r\n        if (amount * parseFloat(stock.price) > funds) {\r\n            setError(true);\r\n            setHelperText(\"Not enough funds available!\");\r\n        } else if (amount < 0) {\r\n            setError(true);\r\n            setHelperText(\"Amount can not be negative\");\r\n        } else {\r\n            setError(false);\r\n            setHelperText(\"\");\r\n        }\r\n        setAmount(amount);\r\n    };\r\n\r\n\r\n    return (\r\n        <Dialog {...props}>\r\n            <DialogTitle id=\"form-dialog-title\">Buy stocks</DialogTitle>\r\n            <DialogContent>\r\n            <DialogContentText>\r\n                Buy stocks of {stock.name} for current price of ${stock.price}\r\n            </DialogContentText>\r\n            {existingAmount > 0 &&\r\n                <DialogContentText>\r\n                You currently have {existingAmount} stocks of this type.\r\n                </DialogContentText>\r\n            }\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n                <Grid item>\r\n                    <TextField\r\n                        autoFocus\r\n                        id=\"amount\"\r\n                        label=\"Amount\"\r\n                        type=\"number\"\r\n                        error={error}\r\n                        onChange={validate}\r\n                        value={amountTextField}\r\n                        helperText={helperText}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant=\"subtitle1\">\r\n                    for ${(amountTextField * Number(stock.price)).toFixed(2)}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button color=\"primary\" onClick={handleBuy} disabled={error}>\r\n                Buy\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default BuyDialog;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport apiRequest from \"../utils/apiRequest\";\r\nimport { IStock } from \"../utils/types\";\r\nimport { DialogTitle, DialogContent, DialogContentText, Grid, Typography, DialogActions, Button, TextField, Dialog, DialogProps } from \"@mui/material\";\r\nimport { ProfileContext } from \"../contexts/profile\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\ninterface IProps extends DialogProps {\r\n    stock: IStock;\r\n}\r\n\r\nconst SellDialog: React.FC<IProps> = ({stock, ...props}) => {\r\n    const { profile, getProfile } = useContext(ProfileContext);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [helperText, setHelperText] = React.useState(\"\");\r\n    const [error, setError] = React.useState(false);\r\n    const [amountTextField, setAmount] = React.useState(0);\r\n    const [existingAmount, setExistingAmount] = React.useState(0);\r\n    React.useEffect(() => {\r\n        if (profile && profile.stocks?.length) {\r\n            const hasTheStock = profile.stocks.find((s) => s.name === stock.ticker);\r\n            if (hasTheStock) {\r\n                setExistingAmount(hasTheStock.amount);\r\n            }\r\n        }\r\n    }, [profile]);\r\n\r\n    const handleSell = async (): Promise<void> => {\r\n        if (error) {\r\n            setHelperText(\"Fix errors before buying stock: \" + helperText);\r\n            return;\r\n        }\r\n\r\n        const sellStock = await apiRequest(\"/market/sell/\", \"POST\",{\r\n            stock: stock.ticker,\r\n            amount: amountTextField\r\n        });\r\n\r\n        if (sellStock) {\r\n            enqueueSnackbar(amountTextField + \" stocks of \" + stock.name + \" sold\");\r\n            setError(false);\r\n            await getProfile();\r\n\r\n        } else {\r\n            setError(true);\r\n            setHelperText(\"Failed to sell stocks\");\r\n        }\r\n    };\r\n    const  validate = (event: any): void => {\r\n        var amount = event.target.value;\r\n        if (amount < 0) {\r\n            setError(true);\r\n            setHelperText(\"Amount can not be negative\");\r\n        } else if (amount > existingAmount) {\r\n            setError(true);\r\n            setHelperText(\"You only have \" + existingAmount + \" of this stock\");\r\n        } else {\r\n            setError(false);\r\n            setHelperText(\"\");\r\n        }\r\n        setAmount(amount);\r\n    };\r\n\r\n\r\n    return (\r\n        <Dialog {...props}>\r\n            <DialogTitle id=\"form-dialog-title\">Sell stocks</DialogTitle>\r\n            <DialogContent>\r\n            <DialogContentText>\r\n                Sell stocks of {stock.name} for current price of ${stock.price}\r\n            </DialogContentText>\r\n            <DialogContentText>\r\n                You currently have {existingAmount} stocks of this type.\r\n            </DialogContentText>\r\n            <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"amount\"\r\n                label=\"Amount\"\r\n                type=\"number\"\r\n                fullWidth\r\n                error={error}\r\n                onChange={validate}\r\n                value={amountTextField}\r\n                helperText={helperText}\r\n            />\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button color=\"primary\" onClick={handleSell} disabled={error}>\r\n                Sell\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SellDialog;","import { IStock } from \"./types\";\r\n\r\nexport const getChangeOfStock = (stock: IStock): number => {\r\n    const newPrice = Number(stock.price);\r\n    if(!stock.daily) {\r\n        return 0;\r\n    }\r\n    const old = Number(stock.hourly.slice(-1)[0].price);\r\n    console.log(old);\r\n    return ((newPrice - old) / old) * 100;\r\n};","import React from \"react\";\r\nimport { Button, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@mui/material\"\r\nimport { IStock } from \"../utils/types\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useModal } from \"mui-modal-provider\";\r\nimport BuyDialog from \"./BuyDialog\";\r\nimport { socket } from \"../App\";\r\nimport SellDialog from \"./SellDialog\";\r\nimport { getChangeOfStock } from \"../utils/helpers\";\r\nimport OpenInFullIcon from '@mui/icons-material/OpenInFull';\r\ninterface IProps {\r\n  row: IStock;\r\n  alternativeLayout: boolean;\r\n}\r\n\r\nconst StockRow: React.FC<IProps> = ({row, alternativeLayout}) => {\r\n    const [color, setColor] = React.useState(\"black\");\r\n    const [stock, updateStockValues] = React.useState<IStock>(row);\r\n    const history = useHistory();\r\n    const { showModal } = useModal();\r\n    React.useEffect(() => {\r\n        socket.on(`marketChange${row.ticker}`, item => {\r\n            updateStockValues({...stock, price: item.price});\r\n            setColor(item.changePositive ? \"green\" : \"red\");\r\n            setTimeout(() => {\r\n               setColor(\"black\"); \r\n            }, 5000);\r\n        });\r\n        return () => {\r\n            socket.removeAllListeners(`marketChange${row.ticker}`);\r\n        }\r\n    }, []);\r\n    let changeOfStock = 0;\r\n    if (!alternativeLayout) {\r\n        changeOfStock = Number(getChangeOfStock(row).toFixed(0));\r\n    } else {\r\n        changeOfStock = ((Number(row.price) - Number(row.buyPrice)) / Number(row.buyPrice)) * 100;\r\n    }\r\n\r\n    const push = (): void => {\r\n        history.push(`/stocks/${stock.ticker}`);\r\n    };\r\n\r\n    return (\r\n        <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\" onClick={() => push()}>\r\n                <OpenInFullIcon color=\"primary\"/>\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\" onClick={() => push()}>\r\n                {stock.ticker}\r\n            </TableCell>\r\n            {alternativeLayout ? (\r\n                <TableCell component=\"th\" scope=\"row\" onClick={() => push()}>\r\n                    ${parseFloat(stock.buyPrice).toFixed(2)}\r\n                </TableCell>\r\n            ) : (\r\n                <TableCell component=\"th\" scope=\"row\" onClick={() => push()}>\r\n                    {stock.name}\r\n                </TableCell>\r\n            )}\r\n            <TableCell style={{ color: color }} align=\"right\">\r\n                ${parseFloat(stock.price).toFixed(2)}\r\n            </TableCell>\r\n            {!alternativeLayout ? (\r\n                <TableCell align=\"right\" style={{ color: `${(changeOfStock < 0) ? \"red\" : \"green\"}` }}>{changeOfStock}%</TableCell>\r\n                ) : (\r\n                    <>\r\n                    <TableCell align=\"right\" style={{ color: `${(changeOfStock < 0) ? \"red\" : \"green\"}` }}>{changeOfStock.toFixed(0)}%</TableCell>\r\n                    <TableCell align=\"right\" >{stock.amount}pcs</TableCell>\r\n                </>\r\n            )}\r\n            <TableCell align=\"right\">\r\n                <Button color=\"error\" onClick={() => showModal(SellDialog, { stock: stock })}>\r\n                    Sell\r\n                </Button>\r\n                <Button color=\"success\" onClick={() => showModal(BuyDialog, { stock: stock })}>\r\n                    Buy\r\n                </Button>\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default StockRow;","import React from \"react\";\r\nimport { Button, CircularProgress, IconButton, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@mui/material\"\r\nimport { IStock, IStockHistory } from \"../utils/types\";\r\nimport StockRow from \"./StockRow\";\r\n\r\ninterface IProps {\r\n  objects: IStock[];\r\n  alternativeLayout: boolean;\r\n}\r\n\r\nconst StockTable: React.FC<IProps> = ({objects, alternativeLayout = false}) => {\r\n    return (\r\n        <TableContainer>\r\n          <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell></TableCell>\r\n                <TableCell>Stock</TableCell>\r\n                <TableCell>{!alternativeLayout ? \"Name\": \"Purchase price\"}</TableCell>\r\n                <TableCell align=\"right\">Current price($)</TableCell>\r\n                {!alternativeLayout ?\r\n                    (<TableCell align=\"right\">Change(24h)</TableCell>)\r\n                    :\r\n                    (\r\n                    <>\r\n                        <TableCell align=\"right\">Change</TableCell>\r\n                        <TableCell align=\"right\">Amount</TableCell>\r\n                    </>\r\n                    )\r\n                }\r\n                <TableCell align=\"center\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {objects && objects.map((row) => (\r\n                <StockRow row={row} alternativeLayout={alternativeLayout}/>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default StockTable;","import React, { useContext, useEffect } from 'react';\r\nimport { AppBar, Toolbar, Typography, Button, IconButton, Grid, Card, Paper } from '@mui/material';\r\nimport Chart from '../compontents/Chart';\r\nimport apiRequest from '../utils/apiRequest';\r\nimport { IStock } from '../utils/types';\r\nimport StockTable from '../compontents/StockTable';\r\nimport { ProfileContext } from '../contexts/profile';\r\nconst Home: React.FC = () => {\r\n    const {\r\n        isLoggedIn,\r\n        profile,\r\n        funds\r\n        } = useContext(ProfileContext);\r\n    const [stocks, setStocks] = React.useState<IStock[]>([]);\r\n    React.useEffect(() => {\r\n        (async function() {\r\n            try {\r\n                const market = await apiRequest(\"/market/all/\", \"GET\");\r\n                setStocks(market.data.res);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        })();\r\n    }, []);\r\n    const random = Math.floor((Math.random() * stocks.length) + 0);\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Paper sx={{padding: \"1em\"}}>\r\n                    <Chart object={stocks ? stocks[random] : {} as IStock}/>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Paper sx={{padding: \"1em\"}}>\r\n                    <Typography variant=\"h6\">Popular stocks</Typography>\r\n                    <StockTable objects={stocks} alternativeLayout={false}/>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );  \r\n}\r\n\r\nexport default Home;","import {Typography, Button, Avatar, TextField, Paper} from '@mui/material';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useContext } from 'react';\r\nimport apiRequest from '../utils/apiRequest';\r\nimport { ProfileContext } from '../contexts/profile';\r\n\r\nconst Register = (): JSX.Element => {\r\n    const {\r\n        isLoggedIn,\r\n    } = useContext(ProfileContext);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n    const [form, setForm] = React.useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordAgain: \"\",\r\n    });\r\n    const onChange = (name: string, value: string): void => {\r\n        setForm({...form, [name]: value})\r\n    };\r\n\r\n    const registerUser = async (event: React.FormEvent): Promise<void> => {\r\n        event.preventDefault();\r\n        try {\r\n            const result = await apiRequest(\"/user/register/\", \"POST\", form);\r\n            if (result.data.res) {\r\n                enqueueSnackbar(\"Succesfully registred user\",{variant: 'success'});\r\n                history.push(\"/\");\r\n            }\r\n        } catch (error) {\r\n            enqueueSnackbar(\"Succesfully registred user\",{variant: 'error'});\r\n        }\r\n    };\r\n    if (isLoggedIn) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n        <Paper sx={{maxWidth: 500, margin: \"auto\", padding: \"1em\"}}>\r\n            <Avatar />\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Register to start trading\r\n            </Typography>\r\n            <form onSubmit={registerUser}>\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                value={form.email}\r\n                onChange={(event) => onChange(event.target.name, event.target.value)}\r\n                />\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={form.password}\r\n                onChange={(event) => onChange(event.target.name, event.target.value)}\r\n                />\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"passwordAgain\"\r\n                label=\"Password agian\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={form.passwordAgain}\r\n                onChange={(event) => onChange(event.target.name, event.target.value)}\r\n                />\r\n                <Button id=\"register\" type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n                Register\r\n                </Button>\r\n            </form>\r\n        </Paper>\r\n\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { AppBar, Toolbar, Typography, Button, IconButton, Grid, Card, Paper, CardActions, CardContent } from '@mui/material';\r\nimport Login from '../compontents/Login';\r\nimport Chart from '../compontents/Chart';\r\nimport apiRequest from '../utils/apiRequest';\r\nimport { IStock } from '../utils/types';\r\nimport { ProfileContext } from '../contexts/profile';\r\nimport Profile from \"../compontents/Profile\";\r\nimport { useParams } from 'react-router';\r\nimport { socket } from '../App';\r\nimport { getChangeOfStock } from '../utils/helpers';\r\nimport { useModal } from \"mui-modal-provider\";\r\nimport SellDialog from '../compontents/SellDialog';\r\nimport BuyDialog from '../compontents/BuyDialog';\r\n\r\n\r\nconst StockDetail: React.FC = () => {\r\n    const {\r\n        isLoggedIn,\r\n        profile,\r\n        funds\r\n        } = useContext(ProfileContext);\r\n    const [stockItem, setStockItem] = React.useState<IStock>();\r\n    const [stockPrice, setStockPrice] = React.useState(\"\");\r\n    const [color, setColor] = React.useState(\"black\");\r\n    const { showModal } = useModal();\r\n    let { ticker } = useParams<{ticker: string}>();\r\n\r\n    React.useEffect(() => {\r\n        (async function() {\r\n            const res = await apiRequest(`/market/${ticker}/`, \"GET\");\r\n            setStockItem(res.data);\r\n            setStockPrice(res.data.price);\r\n        })();\r\n        socket.on(\"minutly\", items => {\r\n            const thisStock = items.find((item: IStock) => item.ticker === ticker);\r\n            if (thisStock) {\r\n                console.log(thisStock);\r\n                setStockItem(thisStock);\r\n            }\r\n        });\r\n        socket.on(`marketChange${ticker}`, item => {\r\n            console.log(\"ja\")\r\n            setStockPrice(item.price);\r\n            setColor(item.changePositive ? \"green\" : \"red\");\r\n            setTimeout(() => {\r\n               setColor(\"black\"); \r\n            }, 5000);\r\n        });\r\n        return () => {\r\n            console.log(\"nej\")\r\n            socket.removeAllListeners(`marketChange${ticker}`);\r\n        }\r\n    }, []);\r\n\r\n    const change = getChangeOfStock(stockItem || {} as IStock)\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Paper sx={{ padding: \"1em\" }}>\r\n                    <Chart object={stockItem ? stockItem : {} as IStock} />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" color=\"primary\">\r\n                            {stockItem?.ticker} - {stockItem?.name}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\">\r\n                            Slogan: <i>{stockItem?.catchPhrase}</i>\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\">\r\n                            CEO: {stockItem?.ceo}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\">\r\n                            Volatility: {((stockItem?.volatility || 0) * 100).toFixed(2)}%\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Grid container>\r\n                            <Grid item xs={6}>\r\n                                <Typography\r\n                                    gutterBottom \r\n                                    variant=\"overline\"\r\n                                    component=\"p\">\r\n                                    Change(24h)\r\n                                </Typography>\r\n                                <Typography\r\n                                    style={{ color: `${(change < 0) ? \"red\" : \"green\"}` }}\r\n                                    gutterBottom \r\n                                    variant=\"h5\"\r\n                                    component=\"div\">\r\n                                    {change.toFixed(2)}% (24h)\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography\r\n                                    gutterBottom \r\n                                    variant=\"overline\"\r\n                                    component=\"p\">\r\n                                    Latest price\r\n                                </Typography>\r\n                                <Typography\r\n                                    style={{ color: color }}\r\n                                    gutterBottom \r\n                                    variant=\"h5\"\r\n                                    component=\"div\">\r\n                                    ${parseFloat(stockPrice).toFixed(2)}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button variant=\"contained\" fullWidth size=\"large\" color=\"success\"\r\n                            onClick={() => showModal(BuyDialog, { stock: stockItem || {} as IStock })}>\r\n                            Buy\r\n                        </Button>\r\n                        <Button variant=\"contained\" fullWidth size=\"large\" color=\"error\"\r\n                            onClick={() => showModal(SellDialog, { stock: stockItem || {} as IStock })}>\r\n                            Sell\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n        \r\n    );  \r\n}\r\n\r\nexport default StockDetail;","\r\nimport { Typography, Button, Grid, Avatar, TextField, } from '@mui/material';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport React, { useContext } from 'react';\r\nimport { ProfileContext } from '../contexts/profile';\r\n\r\nconst Login: React.FC = () => {\r\n    const {\r\n        isLoggingIn,\r\n        isLoggedIn,\r\n        profile,\r\n        loginUser\r\n        } = useContext(ProfileContext);\r\n    const funds = 0;\r\n    React.useEffect(() => {\r\n        console.log(profile);\r\n    }, [isLoggedIn]);\r\n\r\n    const [form, setForm] = React.useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    const onChange = (name: string, value: string): void => {\r\n        setForm({...form, [name]: value})\r\n    };\r\n\r\n    const loginUserButtonPress = async (event: React.FormEvent): Promise<void> => {\r\n        event.preventDefault();\r\n        await loginUser(form.email, form.password);\r\n    };\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Avatar />\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in to start trading\r\n            </Typography>\r\n            <form onSubmit={loginUserButtonPress}>\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                value={form.email}\r\n                onChange={(event) => onChange(event.target.name, event.target.value)}\r\n                />\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={form.password}\r\n                onChange={(event) => onChange(event.target.name, event.target.value)}\r\n                />\r\n                <Button id=\"signin\" type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n                Sign In\r\n                </Button>\r\n                <Grid container>\r\n                <Grid item>\r\n                    <Link to=\"/user/register\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { List, ListItem, CircularProgress, Typography, ListItemText, Chip, Divider } from \"@mui/material\"\r\nimport { CartesianGrid, Label, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\"\r\nimport { IStock, IStockHistory } from \"../utils/types\";\r\nimport apiRequest from \"../utils/apiRequest\";\r\nimport EventIcon from '@mui/icons-material/Event';\r\n\r\nconst EarningsCalendar: React.FC = () => {\r\n    const [earnings, setUpcoming] = React.useState<IStock[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        (async function() {\r\n            try {\r\n                const market = await apiRequest(\"/market/all/\", \"GET\");\r\n                setUpcoming(market.data.res);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        })();\r\n    }, []);\r\n    \r\n    if (!earnings.length) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\">Upcoming earnings</Typography>\r\n            <List>\r\n                <ListItem>\r\n                    <ListItemText primary={earnings[0].ticker + \" \" + earnings[0].name} secondary={\"2021-11-17\"} />\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <ListItemText primary={earnings.slice(-1)[0].ticker + \" \" +  earnings.slice(-1)[0].name} secondary={\"2021-12-24\"} />\r\n                </ListItem>\r\n            </List>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EarningsCalendar;","import React from \"react\";\r\nimport { List, ListItem, Typography, ListItemText, CircularProgress, Button, Divider } from \"@mui/material\"\r\nimport { IProfileUser } from \"../reducers/profile\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IStock } from \"../utils/types\";\r\nimport apiRequest from \"../utils/apiRequest\";\r\n\r\n\r\ninterface Props {\r\n    user?: IProfileUser;\r\n    funds: number;\r\n}\r\nconst Profile: React.FC<Props> = ({user, funds=0}) => {\r\n    const [totalValue, setValue] = React.useState(0);\r\n    const [development, setDevelopment] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        (async function() {\r\n            try {\r\n                const userReq = await apiRequest(\"/user/stocks/\", \"GET\");\r\n                const marketReq = await apiRequest(\"/market/all/\", \"GET\");\r\n                const stocksInMarket = marketReq.data.res;\r\n                const combined = userReq.data.stocks.map((s: IStock) => {\r\n                    const stockOfUser = \r\n                        stocksInMarket.find((sm: IStock) => s.name === sm.ticker);\r\n                        return {...stockOfUser, ...s};\r\n                });\r\n                let t = 0;\r\n                let v = 0;\r\n                combined.forEach((s: IStock) => {\r\n                    t += parseFloat(s.buyPrice) * s.amount;\r\n                    v += parseFloat(s.price) * s.amount;\r\n                });\r\n                setDevelopment(((v - t) / t) * 100)\r\n                setValue(v);\r\n\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        })();\r\n    }, [funds]);\r\n    if (!user) {\r\n        return <CircularProgress />\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            <ListItem>\r\n                <ListItemText primary={\"Total value of portfolio\"} secondary={`$${totalValue.toFixed(2)}`} />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem>\r\n                <ListItemText primary={\"Development of your portfolio\"} secondary={`${!isNaN(development) ?  development.toFixed(2) : 0}%`} />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem>\r\n                <ListItemText primary={\"Current funds\"} secondary={`${funds.toFixed(2)}$`} />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n                <Button component={Link} to=\"/deposit\" sx={{margin: \"1px\"}} variant=\"contained\" size=\"small\">Deposit funds</Button>\r\n                <Button component={Link} to=\"/user/portfolio\" sx={{margin: \"1px\"}} variant=\"contained\" size=\"small\" color=\"secondary\">View your portfolio</Button>\r\n            </ListItem>\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, { useContext } from 'react';\r\nimport { Grid, Paper, Box } from '@mui/material';\r\nimport Login from './Login';\r\nimport EarningsCalendar from './Calendar';\r\nimport { ProfileContext } from '../contexts/profile';\r\nimport Profile from \"./Profile\";\r\nimport { Route, RouteProps } from 'react-router';\r\n\r\nconst RouteWithSideInformation: React.FC<RouteProps> = (props: RouteProps) => {\r\n    const {\r\n        isLoggedIn,\r\n        profile,\r\n        funds\r\n        } = useContext(ProfileContext);\r\n    return (\r\n        <Grid container gap={1}>\r\n            <Grid item xs={12} sm={7} >\r\n                <Route {...props} />\r\n            </Grid>\r\n            <Grid container item xs={12} sm={4} gap={1}>\r\n                <Grid item sx={{flexGrow: 1, display: { xs: `${!isLoggedIn ? \"none\" : \"inline\"}`, sm: 'inline' }}}>\r\n                    <Paper sx={{padding: \"1em\"}}>\r\n                        {(!isLoggedIn) ? (<Login />) : (<Profile user={profile} funds={funds}/>)}\r\n                    </Paper>\r\n                </Grid> \r\n                <Grid item sx={{flexGrow: 1}}>\r\n                    <Paper sx={{padding: \"1em\"}}>\r\n                        <EarningsCalendar />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );  \r\n}\r\n\r\nexport default RouteWithSideInformation;","import React, { useContext, useEffect } from 'react';\r\nimport { AppBar, Toolbar, Typography, Button, IconButton, Grid, Card, Paper, TextField, ButtonGroup, InputAdornment } from '@mui/material';\r\nimport apiRequest from '../utils/apiRequest';\r\nimport { useHistory } from 'react-router';\r\nimport { useSnackbar } from 'notistack';\r\nimport { ProfileContext } from '../contexts/profile';\r\n\r\nconst DepositView: React.FC = () => {\r\n    const {\r\n        getFunds\r\n        } = useContext(ProfileContext);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n    const [amount, changeAmount] = React.useState(0);\r\n    const submit = async () => {\r\n        try {\r\n            const res = await apiRequest(\"/user/deposit/\", \"POST\", {amount: amount})\r\n            enqueueSnackbar(\"Funds deposited\",{variant: 'success'});\r\n            await getFunds();\r\n            history.push(\"/\");\r\n        } catch (error) {\r\n            enqueueSnackbar(\"Errow while trying to deposit funds\",{variant: 'error'});\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Paper id=\"deposit\">\r\n            <Grid container sx={{padding: \"1em 4em\", margin: \"auto\", minHeight: \"350px\"}} alignItems=\"stretch\">\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h4\">Deposit to your account</Typography>\r\n                    <Typography variant=\"body1\">The money goes straight into your account! </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                    fullWidth\r\n                    required\r\n                    type=\"number\"\r\n                    id=\"amount\"\r\n                    label=\"Amount to deposit\"\r\n                    name=\"amount\"\r\n                    value={amount}\r\n                    sx={{marginBottom: \"5px\"}}\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                      }}\r\n                    onChange={(event) => changeAmount(Number(event.target.value))}\r\n                    />\r\n                    <ButtonGroup variant=\"contained\" size=\"small\" color=\"secondary\" fullWidth>\r\n                        <Button onClick={() => changeAmount(100)}>$100</Button>\r\n                        <Button onClick={() => changeAmount(250)}>$250</Button>\r\n                        <Button onClick={() => changeAmount(500)}>$500</Button>\r\n                        <Button onClick={() => changeAmount(1000)}>$1000</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Button onClick={() => submit()} fullWidth variant=\"contained\" color=\"primary\">\r\n                        Deposit funds\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );  \r\n}\r\n\r\nexport default DepositView;","import React, { useContext, useEffect } from 'react';\r\nimport { AppBar, Toolbar, Typography, Button, IconButton, Grid, Card, Paper } from '@mui/material';\r\nimport Login from '../compontents/Login';\r\nimport Chart from '../compontents/Chart';\r\nimport apiRequest from '../utils/apiRequest';\r\nimport { IStock } from '../utils/types';\r\nimport StockTable from '../compontents/StockTable';\r\nimport EarningsCalendar from '../compontents/Calendar';\r\nimport { ProfileContext } from '../contexts/profile';\r\nimport Profile from \"../compontents/Profile\";\r\n\r\nconst Portfolio: React.FC = () => {\r\n    const [stocks, setStocks] = React.useState<IStock[]>([]);\r\n    React.useEffect(() => {\r\n        (async function() {\r\n            try {\r\n                const userReq = await apiRequest(\"/user/stocks/\", \"GET\");\r\n                const marketReq = await apiRequest(\"/market/all/\", \"GET\");\r\n                const stocksInMarket = marketReq.data.res;\r\n                const combined = userReq.data.stocks.filter((s: IStock) => s.amount > 0).map((s: IStock) => {\r\n                    const stockOfUser = \r\n                        stocksInMarket.find((sm: IStock) => (s.name === sm.ticker));\r\n                    return {...stockOfUser, ...s};\r\n                });\r\n                console.log(combined);\r\n                setStocks(combined);\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        })();\r\n    }, []);\r\n    return (\r\n        <Paper sx={{padding: \"1em\"}}>\r\n            <Typography variant=\"h6\">Porfolio</Typography>\r\n            <StockTable objects={stocks} alternativeLayout={true}/>\r\n        </Paper>\r\n    );  \r\n}\r\n\r\nexport default Portfolio;","import {Paper} from '@mui/material';\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport Login from '../compontents/Login';\r\nimport { ProfileContext } from '../contexts/profile';\r\nconst LoginView: React.FC = () => {\r\n    const {\r\n        isLoggedIn,\r\n        } = React.useContext(ProfileContext);\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n        <Paper sx={{maxWidth: 500, margin: \"auto\", padding: \"1em\"}}>\r\n            <Login />\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default LoginView;\r\n","import {Paper} from '@mui/material';\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport Login from '../compontents/Login';\r\nimport { ProfileContext } from '../contexts/profile';\r\nconst LogoutView: React.FC = () => {\r\n    const {logout} = React.useContext(ProfileContext);\r\n\r\n    React.useEffect(() => {\r\n        logout();\r\n    }, []);\r\n    return (\r\n        <Redirect to=\"/\" />\r\n    );\r\n}\r\n\r\nexport default LogoutView;\r\n","import React, { useReducer, useContext } from 'react';\nimport { AppBar, Toolbar, Typography, Button, IconButton, Box, CssBaseline, Divider, List, ListItem, ListItemIcon, ListItemText, SwipeableDrawer } from '@mui/material';\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport { AccountCircle } from '@mui/icons-material';\nimport Home from './views/Home';\nimport Register from './views/Register';\nimport profileReducer from './reducers/profile';\nimport { ProfileContext } from './contexts/profile';\nimport apiRequest from './utils/apiRequest';\nimport StockDetail from './views/StockDetail';\nimport RouteWithSideInformation from './compontents/RouteWithSideInformation';\nimport DepositView from './views/Deposit';\nimport Portfolio from './views/Portfolio';\nimport io from 'socket.io-client';\nimport { useSnackbar } from 'notistack';\nimport LoginView from './views/LoginView';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport HomeIcon from '@mui/icons-material/Home';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport LogoutView from './views/Logout';\n\nvar socketUrl = process.env.REACT_APP_SOCKET_URL || \"https://market-socket.oscarlang.tech\";\n\n\nexport const socket = io(socketUrl, { reconnectionDelayMax: 10000 });\nconst App = (): JSX.Element => {\n    const {\n        isLoggedIn,\n        funds,\n        getProfile\n    } = useContext(ProfileContext);\n\n    const { enqueueSnackbar } = useSnackbar();\n    const [drawer, openDrawer] = React.useState(false);\n    React.useEffect(() => {\n        if (!isLoggedIn) {\n            (async function () {\n                await getProfile();\n            })();\n        }\n        socket.on(\"connect_error\", (error) => {\n            enqueueSnackbar(\"Errow while trying to update stock market prices\", { variant: 'error' });\n        });\n    }, []);\n\n    return (\n        <>\n            <Box sx={{ flexGrow: 1 }}>\n                <CssBaseline />\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Box sx={{flexGrow: 1}}>\n                            {isLoggedIn && (\n                                <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"open drawer\"\n                                    onClick={() => openDrawer(true)}\n                                    edge=\"start\"\n                                    sx={{ display: { xs: 'flex', sm: 'none' } }}\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                            )}\n                            <Button\n                                component={Link}\n                                to=\"/\"\n                                sx={{ display: { xs: 'none', sm: 'flex' } }}\n                                color=\"inherit\">        \n                                StockSocket - \n                                <Typography variant=\"caption\">\n                                    Trade 24/7\n                                </Typography>\n                            </Button>\n                        </Box>\n                        {isLoggedIn ? (\n                            <div>\n                                <IconButton\n                                    aria-label=\"account of current user\"\n                                    aria-controls=\"menu-appbar\"\n                                    aria-haspopup=\"true\"\n                                    color=\"inherit\"\n                                    component={Link} to=\"/deposit\"\n                                >\n                                    <Typography variant=\"h6\">\n                                        {\"$\" + funds.toFixed(2)}\n                                    </Typography>\n                                    <AccountBalanceIcon />\n                                </IconButton>\n                                <IconButton\n                                    aria-label=\"account of current user\"\n                                    aria-controls=\"menu-appbar\"\n                                    aria-haspopup=\"true\"\n                                    color=\"inherit\"\n                                    component={Link} to=\"/user/portfolio\"\n                                >\n                                    <AccountCircle />\n                                </IconButton>\n                                <IconButton\n                                    aria-label=\"account of current user\"\n                                    aria-controls=\"menu-appbar\"\n                                    aria-haspopup=\"true\"\n                                    color=\"inherit\"\n                                    component={Link} to=\"/user/logout\"\n                                >\n                                    <LogoutIcon />\n                                </IconButton>\n                            </div>\n                        ) : (\n                            <Button\n                                component={Link}\n                                to=\"/user/login\"\n                                sx={{ display: { xs: 'flex', sm: 'none' } }}\n                                color=\"inherit\">\n                                Login\n                            </Button>\n                        )}\n                    </Toolbar>\n                </AppBar>\n            </Box>\n            <SwipeableDrawer\n                open={drawer}\n                onClose={() => openDrawer(false)}\n                onOpen={() => openDrawer(true)}\n            >\n                <Box\n                    sx={{ width: 250 }}\n                    role=\"presentation\"\n                    onClick={() => openDrawer(false)}\n                >   \n                    <Toolbar>\n                    <Typography variant=\"button\">\n                        StockSocket - \n                    </Typography>\n                    <Typography variant=\"caption\">\n                        Trade 24/7\n                    </Typography>\n                    </Toolbar>\n                    <Divider />\n                    <List>\n                        <ListItem component={Link} to=\"/\" button key={\"home\"}>\n                            <ListItemIcon><HomeIcon /></ListItemIcon>\n                            <ListItemText primary={\"Home\"} />\n                        </ListItem>\n                        <ListItem component={Link} to=\"/user/portfolio\" button key={\"port\"}>\n                            <ListItemIcon><AccountCircle /></ListItemIcon>\n                            <ListItemText primary={\"Portfolio\"} />\n                        </ListItem>\n                        <ListItem component={Link} to=\"/user/deposit\" button key={\"dep\"}>\n                            <ListItemIcon><AccountBalanceIcon /></ListItemIcon>\n                            <ListItemText primary={\"Deposit\"} />\n                        </ListItem>\n                        <Divider />\n                        <ListItem component={Link} to=\"/user/logout\" button key={\"log\"}>\n                            <ListItemIcon><LogoutIcon /></ListItemIcon>\n                            <ListItemText primary={\"Logout\"} />\n                        </ListItem>\n                    </List>\n                </Box>\n            </SwipeableDrawer>\n            <Box sx={{ margin: \"auto\", marginTop: \"1em\", maxWidth: 1200 }}>\n                <Switch>\n                    <RouteWithSideInformation exact path=\"/\" component={Home} />\n                    <RouteWithSideInformation exact path=\"/deposit\" component={DepositView} />\n                    <RouteWithSideInformation path=\"/user/portfolio\" component={Portfolio} />\n                    <Route path=\"/stocks/:ticker\" component={StockDetail} />\n                    <Route exact path=\"/user/register\" component={Register} />\n                    <Route exact path=\"/user/login\" component={LoginView} />\n                    <Route exact path=\"/user/logout\" component={LogoutView} />\n                </Switch>\n            </Box>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport ProfileProvider from \"./contexts/profile\";\nimport ModalProvider from 'mui-modal-provider';\nimport { SnackbarProvider } from 'notistack';\nReactDOM.render(\n    <BrowserRouter>\n        <ProfileProvider>\n            <SnackbarProvider\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                maxSnack={3}>\n                <ModalProvider beta>\n                    <App />\n                </ModalProvider>\n            </SnackbarProvider>\n        </ProfileProvider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}